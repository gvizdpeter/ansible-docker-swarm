---
-
  # to gather facts about all hosts
  hosts: all
  tasks: []

-
  hosts: nfs_server
  gather_facts: no
  tags: nfs-server
  vars:
    nfs_client_ips: "{{ (groups['nfs_client'] | map('extract', hostvars, ['ansible_eth1', 'ipv4', 'address']) | join(',')).split(',') }}"
  roles:
    - nfs-server

-
  hosts: nfs_client
  gather_facts: no
  tags: nfs-client
  vars:
    nfs_server_ip: "{{ hostvars[groups['nfs_server'][0]].ansible_eth1.ipv4.address }}"
    shared_volume: "{{ nfs_server_ip }}:{{ shared_mountpoint }}"
  roles:
    - nfs-client

-
  hosts: swarm_leader
  gather_facts: no
  tags:
    - docker-swarm
    - docker-swarm-init
  vars:
    leader_ip: "{{ ansible_eth1.ipv4.address }}"
  roles:
    - docker-swarm-init
  post_tasks:
    - name: Register docker swarm tokens
      set_fact:
        manager_token: "{{ manager_token_register.stdout }}"
        worker_token: "{{ worker_token_register.stdout }}"

-
  hosts: swarm_manager, swarm_worker
  gather_facts: no
  serial: 1
  tags:
    - docker-swarm
    - docker-swarm-join-manager
  vars:
    token: "{{ hostvars[groups['swarm_leader'][0]].manager_token if 'swarm_manager' in group_names else hostvars[groups['swarm_leader'][0]].worker_token}}"
    leader_ip: "{{ hostvars[groups['swarm_leader'][0]].ansible_eth1.ipv4.address }}"
    manager: "{{ 'true' if 'swarm_manager' in group_names else 'false' }}"
  roles:
    - docker-swarm-join
-
  hosts: swarm_leader
  gather_facts: no
  tags:
   - deploy-stacks
   - deploy-traefik-public-network
  tasks:
    - name: Create traefik-public network
      docker_network:
        name: traefik-public
        driver: overlay
        attachable: yes
        scope: swarm
        ipam_config:
          - subnet: 10.10.0.0/16

-
  hosts: swarm_leader
  gather_facts: no
  tags:
   - deploy-stacks
   - deploy-portainer-stack
  tasks:
    - name: Deploy stacks
      include_role:
        name: docker-stack-deploy
      vars:
        docker_stack_file_path: "{{ playbook_dir }}/files/docker-compose.stack.{{ item }}.yml"
        template_path: "{{ shared_mountpoint }}"
        stack_name: "{{ item }}"
      with_items:
        - traefik
        - portainer

-
  hosts: ha_proxy
  gather_facts: no
  tags: ha-proxy
  vars:
    listen_ip: "{{ ansible_eth1.ipv4.address }}"
    manager_ips: "{{ (groups['swarm_manager'] | map('extract', hostvars, ['ansible_eth1', 'ipv4', 'address']) | join(',')).split(',') }}"
    leader_ip: "{{ hostvars[groups['swarm_leader'][0]].ansible_eth1.ipv4.address }}"
    backend_server_ips: "{{ manager_ips + [ leader_ip ] }}"
  roles:
    - ha-proxy
...
